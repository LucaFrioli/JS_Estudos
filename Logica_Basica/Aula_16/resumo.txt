PAra entender mais no que foi realizado no exercício anterior é importante falarmos sobre DOM :

DOM em tradução é Document Object Model: ou seja ele pega toda a página e divide em uma árvore hierárquica, o genealógica(direi assim para uma melhor comprenção);

A window, é a primeira linha e a raíz dessa arvore, tudo que se encontra dentro do html e até mesmo o próprio código é armazenado nesse objeto : então chamamos ele de superpai, e todo o html como elementos filhos desse objeto.

Podemos também dizer que os filhos podem ter filhos, e se tornam pais para os mesmo, vamos analizar o código html que se encontra nesse diretório.

Tudo isso está dentro da window.document, o seja chamamos de filho, e o código filho recebe a nomenclatura de document:

<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Introdução ao Dom</title>
    <style>
        body {
            background-color: rgb(5, 30, 59);
            color: beige;
            display: flex;
            flex-direction: row;
            ;
        }
        section.container {
            max-width: 640px;
            margin: 2rem auto;
            padding: 2rem;
            border-radius: 15px;
            background-color: rgb(35, 124, 226);
        }

        div.demo{
            max-width: 640px;
            margin: 2rem auto;
            padding: 2rem;
            border-radius: 15px;
            background-color: rgb(8, 36, 68);
        }
    </style>
</head>

<body>
    <section class="container" id="container">
        <h1 class="titulo">Lorem ipsum dolor sit.</h1>

    </section>
    <script src="./js/script.js"></script>
</body>

</html>


podemos dizer que Document é elemento pai de mais dois filhos : que seriam a head e o body: podemos acessa-los utilizando apenas : document.head ou document.body, e esse objetos filhos do document apresentam por subsequencia mais elementos filhos;

Por subsequencia podemos chegar até um filho que aparentemente não tem mais elementos filhos para método utilizarei como exemplo o título h1. este elemento em si tem mais tantos filhos que permitem ser manipulados por javascript como vimeos em aulas anteriores, um deles por exemplo é o filho método innerHTML por exemplo, ou também o nodeText que no caso é representado por (Lorem ipsum dolor sit.);


A coisa mais interessante dentro do uso da API DOM dentro do código JS é a possibilidade de criar, retirar, colocar elementos mechendo em toda a hierarquia da página html, como fizemos no exercício passado, adicionando um grupo familiar inteiro dentro do nosso html


Inclusive é por esse motivo que urtilizamos o pai.appendChild(filho a ser inserido) literalmente adicionar um filho ao elemento pai em questão formando assim a estrutura hierárquica que é facil de ser vista com a própria identação do html, sendo o que se encontra mais para dentro de uma estrutura e mais para a direita, representa o "filho mais novo" do ramo familiar. ex:  o filho mais novo do código visto acima é o (Lorem ipsum dolor sit.), porém se olhar dentro do html do navegador podemosnotar que existem ainda filhos dentro de uma estrutura familiar da div.demo que foi injetadapelo código script.js
